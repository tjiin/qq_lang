from rply import LexerGenerator


lg = LexerGenerator()
lg.add('LET', r'\blet\b')
lg.add('RETURN', r'\breturn\b')
lg.add('FUNCTION', r'\bfunction\b')
lg.add('<=', r'<=')
lg.add('<', r'<')
lg.add('>', r'>')
lg.add('>=', r'>=')
lg.add('!=', r'!=')
lg.add('==', r'==')
lg.add('NOT', r'\bnot\b')
lg.add('AND', r'\band\b')
lg.add('OR', r'\bor\b')
lg.add('TRUE', r'\bTrue\b')
lg.add('FALSE', r'\bFalse\b')
lg.add('IDENTIFIER', r'[a-zA-Z_][a-zA-Z0-9_]*')
lg.add('COMMA', r'\,')
lg.add('SEMICOLON', r'\;')
lg.add('INTEGER', r'(?<![\d.])[0-9]+(?![\d.])')
lg.add('FLOAT', r'\d+\.\d+')
lg.add('LPAREN', r'\(')
lg.add('RPAREN', r'\)')
lg.add('LBRACE', r'\{')
lg.add('RBRACE', r'\}')
lg.add('NEGATIVE', r'^-|(?<=\()-|(?<=[\+\-\*\/\^])-|(?<==\s)-|(?<=[^0-9./)])-(?=[0-9.a-zA-Z])')
lg.add('PLUS', r'\+')
lg.add('MINUS', r'-')
lg.add('MUL', r'\*')
lg.add('DIV', r'/')
lg.add('POW', r'\^')
lg.add('=', r'=')
lg.ignore(r'[^\S\n\t]+')
lg.add('NEWLINE', r"\\n")
# lg.add('NO_EQUALS', r'^([a-zA-Z0-9_\+\-\*\/\^\s\(\).,]+)')

lexer = lg.build()

#  ^-|(?<=\()-|(?<=[\+\-\*\/\^])-|(?<==\s)-|(?<=[^0-9.])-(?=[0-9.a-zA-Z])
